//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartBEAM.Resources
{
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SmartBEAM.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to LeftToRight.
        /// </summary>
        public static string ResourceFlowDirection
        {
            get
            {
                return ResourceManager.GetString("ResourceFlowDirection", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to us-EN.
        /// </summary>
        public static string ResourceLanguage
        {
            get
            {
                return ResourceManager.GetString("ResourceLanguage", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to MY APPLICATION.
        /// </summary>
        public static string ApplicationTitle
        {
            get
            {
                return ResourceManager.GetString("ApplicationTitle", resourceCulture);
            }
        }
        public static string SampleProperty
        {
            get
            {
                return ResourceManager.GetString("SampleProperty", resourceCulture);
            }
        }
        public static string ConnectButtonCaption
        {
            get
            {
                return ResourceManager.GetString("ConnectButtonCaption", resourceCulture);
            }
        }

        public static string FindButtonCaption
        {
            get
            {
                return ResourceManager.GetString("FindButtonCaption", resourceCulture);
            }
        }

        public static string InstructionsText
        {
            get
            {
                return ResourceManager.GetString("InstructionsText", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to button.
        /// </summary>
        public static string AppBarButtonText
        {
            get
            {
                return ResourceManager.GetString("AppBarButtonText", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to menu item.
        /// </summary>
        public static string AppBarMenuItemText
        {
            get
            {
                return ResourceManager.GetString("AppBarMenuItemText", resourceCulture);
            }
        }

        public static string Msg_BluetoothOff
        {
            get
            {
                return ResourceManager.GetString("Msg_BluetoothOff", resourceCulture);
            }
        }
        public static string Msg_ConnectedTo
        {
            get
            {
                return ResourceManager.GetString("Msg_ConnectedTo", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to You cannot run this sample in the emulator because Bluetooth is not enabled. To see the sample working, run it on a Windows Phone 8 device..
        /// </summary>
        public static string Msg_EmulatorMode
        {
            get
            {
                return ResourceManager.GetString("Msg_EmulatorMode", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to To run this app, you must have ID_CAP_PROXIMITY enabled in WMAppManifest.xaml.
        /// </summary>
        public static string Msg_MissingCaps
        {
            get
            {
                return ResourceManager.GetString("Msg_MissingCaps", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to No paired devices found.
        /// </summary>
        public static string Msg_NoPairedDevices
        {
            get
            {
                return ResourceManager.GetString("Msg_NoPairedDevices", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to page name.
        /// </summary>
        public static string PageTitle
        {
            get
            {
                return ResourceManager.GetString("PageTitle", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Service name to use:.
        /// </summary>
        public static string ServiceFieldPrompt
        {
            get
            {
                return ResourceManager.GetString("ServiceFieldPrompt", resourceCulture);
            }
        }
    }
}
